{"id":"src/redux/saga/index.tsx","dependencies":[{"name":"/home/rails/gitusers-app/tsconfig.json","includedInParent":true,"mtime":1618982589294},{"name":"/home/rails/gitusers-app/package.json","includedInParent":true,"mtime":1618986981915},{"name":"redux-saga/effects","loc":{"line":28,"column":20},"parent":"/home/rails/gitusers-app/src/redux/saga/index.tsx","resolved":"/home/rails/gitusers-app/node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js"},{"name":"./gitUsers","loc":{"line":29,"column":21},"parent":"/home/rails/gitusers-app/src/redux/saga/index.tsx","resolved":"/home/rails/gitusers-app/src/redux/saga/gitUsers.tsx"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rootSaga;\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _gitUsers = _interopRequireDefault(require(\"./gitUsers\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __generator = void 0 && (void 0).__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nfunction rootSaga() {\n  return __generator(this, function (_a) {\n    switch (_a.label) {\n      case 0:\n        return [4\n        /*yield*/\n        , (0, _effects.all)([(0, _gitUsers.default)()])];\n\n      case 1:\n        _a.sent();\n\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":5,"column":14},"generated":{"line":125,"column":0}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":5,"column":25},"generated":{"line":125,"column":9}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":5,"column":14},"generated":{"line":125,"column":17}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":5,"column":33},"generated":{"line":125,"column":20}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":129,"column":0}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":129,"column":15}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":129,"column":16}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":130,"column":0}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":131,"column":0}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":8},"generated":{"line":131,"column":10}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":12},"generated":{"line":131,"column":28}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":7,"column":4},"generated":{"line":131,"column":29}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":12},"generated":{"line":131,"column":53}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":8},"generated":{"line":131,"column":54}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":131,"column":55}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":131,"column":56}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":134,"column":0}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":134,"column":8}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":134,"column":10}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":134,"column":11}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":6,"column":2},"generated":{"line":134,"column":15}},{"source":"src/redux/saga/index.tsx","name":null,"original":{"line":9,"column":1},"generated":{"line":141,"column":0}}],"sources":{"src/redux/saga/index.tsx":"import { all } from 'redux-saga/effects';\n\nimport gitUsers from './gitUsers';\n\nexport default function* rootSaga() {\n  yield all([\n    gitUsers(),\n  ]);\n}\n"},"lineCount":null}},"error":null,"hash":"c878a5b3fd1ffb65abcaf8b9af0698e2","cacheData":{"env":{}}}