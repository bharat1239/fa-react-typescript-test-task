"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Lint = require("tslint/lib");
var ts = require("typescript");
var getJsxAttributes_1 = require("../helpers/getJsxAttributes");
var nodeIsKind_1 = require("../helpers/nodeIsKind");
var Rule = /** @class */ (function (_super) {
    __extends(Rule, _super);
    function Rule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Rule.prototype.apply = function (sourceFile) {
        return this.applyWithFunction(sourceFile, walk);
    };
    return Rule;
}(Lint.Rules.AbstractRule));
exports.Rule = Rule;
function walk(ctx) {
    ts.forEachChild(ctx.sourceFile, function cb(node) {
        if (nodeIsKind_1.nodeIsKind(node, 'JsxElement')) {
            checkAttributes(ctx, getJsxAttributes_1.getJsxAttributes(node.openingElement));
        }
        else if (nodeIsKind_1.nodeIsKind(node, 'JsxSelfClosingElement')) {
            checkAttributes(ctx, getJsxAttributes_1.getJsxAttributes(node));
        }
        return ts.forEachChild(node, cb);
    });
}
function checkAttributes(ctx, nodes) {
    var sf = ctx.sourceFile;
    var nonSpreadAttributes = nodes.filter(function (n) { return n.kind === ts.SyntaxKind.JsxAttribute; });
    for (var _i = 0, nonSpreadAttributes_1 = nonSpreadAttributes; _i < nonSpreadAttributes_1.length; _i++) {
        var attribute = nonSpreadAttributes_1[_i];
        var _a = attribute.getChildren(sf), identifier = _a[0], assignment = _a[1], initializer = _a[2];
        if (!initializer) {
            continue;
        }
        if (assignment.getStart(sf) !== assignment.getFullStart() ||
            initializer.getStart(sf) !== initializer.getFullStart()) {
            var fix = [
                Lint.Replacement.deleteText(assignment.getFullStart(), assignment.getStart(sf) - assignment.getFullStart()),
                Lint.Replacement.deleteText(initializer.getFullStart(), initializer.getStart(sf) - initializer.getFullStart()),
            ];
            ctx.addFailureAtNode(attribute, "jsx attribute '" + identifier.getText(sf) + "' should not have whitespace around '='", fix);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianN4QXR0cmlidXRlU3BhY2luZ1J1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJqc3hBdHRyaWJ1dGVTcGFjaW5nUnVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpQ0FBa0M7QUFDbEMsK0JBQWdDO0FBQ2hDLGdFQUE4RDtBQUM5RCxvREFBa0Q7QUFFbEQ7SUFBMEIsd0JBQXVCO0lBQWpEOztJQUlBLENBQUM7SUFITyxvQkFBSyxHQUFaLFVBQWEsVUFBeUI7UUFDckMsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQ2hELENBQUM7SUFDRixXQUFDO0FBQUQsQ0FBQyxBQUpELENBQTBCLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxHQUloRDtBQUpZLG9CQUFJO0FBTWpCLFNBQVMsSUFBSSxDQUFDLEdBQTJCO0lBQ3hDLEVBQUUsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUUsQ0FBQyxJQUFhO1FBQ3hELElBQUksdUJBQVUsQ0FBZ0IsSUFBSSxFQUFFLFlBQVksQ0FBQyxFQUFFO1lBQ2xELGVBQWUsQ0FBQyxHQUFHLEVBQUUsbUNBQWdCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUE7U0FDM0Q7YUFBTSxJQUFJLHVCQUFVLENBQTJCLElBQUksRUFBRSx1QkFBdUIsQ0FBQyxFQUFFO1lBQy9FLGVBQWUsQ0FBQyxHQUFHLEVBQUUsbUNBQWdCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtTQUM1QztRQUNELE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDakMsQ0FBQyxDQUFDLENBQUE7QUFDSCxDQUFDO0FBRUQsU0FBUyxlQUFlLENBQ3ZCLEdBQTJCLEVBQzNCLEtBQW9DO0lBRXBDLElBQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxVQUFVLENBQUE7SUFDekIsSUFBTSxtQkFBbUIsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLElBQUksS0FBSyxFQUFFLENBQUMsVUFBVSxDQUFDLFlBQVksRUFBckMsQ0FBcUMsQ0FBQyxDQUFBO0lBRXBGLEtBQXdCLFVBQW1CLEVBQW5CLDJDQUFtQixFQUFuQixpQ0FBbUIsRUFBbkIsSUFBbUIsRUFBRTtRQUF4QyxJQUFNLFNBQVMsNEJBQUE7UUFDYixJQUFBLDhCQUFpRSxFQUFoRSxrQkFBVSxFQUFFLGtCQUFVLEVBQUUsbUJBQXdDLENBQUE7UUFDdkUsSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNqQixTQUFRO1NBQ1I7UUFFRCxJQUNDLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssVUFBVSxDQUFDLFlBQVksRUFBRTtZQUNyRCxXQUFXLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLFdBQVcsQ0FBQyxZQUFZLEVBQUUsRUFDdEQ7WUFDRCxJQUFNLEdBQUcsR0FBRztnQkFDWCxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FDMUIsVUFBVSxDQUFDLFlBQVksRUFBRSxFQUN6QixVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FDbkQ7Z0JBQ0QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQzFCLFdBQVcsQ0FBQyxZQUFZLEVBQUUsRUFDMUIsV0FBVyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsR0FBRyxXQUFXLENBQUMsWUFBWSxFQUFFLENBQ3JEO2FBQ0QsQ0FBQTtZQUNELEdBQUcsQ0FBQyxnQkFBZ0IsQ0FDbkIsU0FBUyxFQUNULG9CQUFrQixVQUFVLENBQUMsT0FBTyxDQUNuQyxFQUFFLENBQ0YsNENBQXlDLEVBQzFDLEdBQUcsQ0FDSCxDQUFBO1NBQ0Q7S0FDRDtBQUNGLENBQUMifQ==