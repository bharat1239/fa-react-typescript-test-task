"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Lint = require("tslint/lib");
var ts = require("typescript");
var nodeIsKind_1 = require("../helpers/nodeIsKind");
var Rule = /** @class */ (function (_super) {
    __extends(Rule, _super);
    function Rule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Rule.prototype.apply = function (sourceFile) {
        return this.applyWithWalker(new Walker(sourceFile, this.ruleName, this.getOptions()));
    };
    return Rule;
}(Lint.Rules.AbstractRule));
exports.Rule = Rule;
var Walker = /** @class */ (function (_super) {
    __extends(Walker, _super);
    function Walker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Walker.prototype.walk = function (sourceFile) {
        var _this = this;
        var cb = function (node) {
            if (nodeIsKind_1.nodeIsKind(node, 'ArrowFunction')) {
                _this.validate(node);
            }
            return ts.forEachChild(node, cb);
        };
        ts.forEachChild(sourceFile, cb);
    };
    Walker.prototype.validate = function (node) {
        var body = node.body;
        if (this.functionBodyIsBraced(body) &&
            this.functionBodyHasOneStatement(body) &&
            this.functionBodyIsOneLine(body)) {
            this.addFailureAtNode(body, 'single-line arrow functions should not be wrapped in braces', Lint.Replacement.replaceNode(body, this.getFixedText(body)));
        }
    };
    Walker.prototype.functionBodyIsBraced = function (node) {
        return nodeIsKind_1.nodeIsKind(node, 'Block');
    };
    Walker.prototype.functionBodyHasOneStatement = function (node) {
        return node.statements.length === 1;
    };
    Walker.prototype.functionBodyIsOneLine = function (node) {
        var bodyText = node.getFullText(this.getSourceFile());
        return !/\n/.test(bodyText);
    };
    Walker.prototype.getFixedText = function (node) {
        var sf = this.getSourceFile();
        var body = node.getChildAt(1, sf);
        var result = this.stripSemicolon(body.getText(sf));
        var statement = body.getChildAt(0, sf);
        if (nodeIsKind_1.nodeIsKind(statement, 'ReturnStatement')) {
            result = result.replace('return', '').trim();
            var returnExpression = statement.getChildAt(1, sf);
            if (nodeIsKind_1.nodeIsKind(returnExpression, 'ObjectLiteralExpression')) {
                result = "(" + result + ")";
            }
        }
        return result;
    };
    Walker.prototype.stripSemicolon = function (text) {
        return text.trim().replace(/;$/, '');
    };
    return Walker;
}(Lint.AbstractWalker));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9CcmFjZXNGb3JTaW5nbGVMaW5lQXJyb3dGdW5jdGlvbnNSdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibm9CcmFjZXNGb3JTaW5nbGVMaW5lQXJyb3dGdW5jdGlvbnNSdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlDQUFrQztBQUNsQywrQkFBZ0M7QUFDaEMsb0RBQWtEO0FBRWxEO0lBQTBCLHdCQUF1QjtJQUFqRDs7SUFNQSxDQUFDO0lBTE8sb0JBQUssR0FBWixVQUFhLFVBQXlCO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FDMUIsSUFBSSxNQUFNLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQ3hELENBQUE7SUFDRixDQUFDO0lBQ0YsV0FBQztBQUFELENBQUMsQUFORCxDQUEwQixJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksR0FNaEQ7QUFOWSxvQkFBSTtBQVFqQjtJQUFxQiwwQkFBdUI7SUFBNUM7O0lBOERBLENBQUM7SUE3RE8scUJBQUksR0FBWCxVQUFZLFVBQXlCO1FBQXJDLGlCQVNDO1FBUkEsSUFBTSxFQUFFLEdBQUcsVUFBQyxJQUFhO1lBQ3hCLElBQUksdUJBQVUsQ0FBbUIsSUFBSSxFQUFFLGVBQWUsQ0FBQyxFQUFFO2dCQUN4RCxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFBO2FBQ25CO1lBQ0QsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQTtRQUNqQyxDQUFDLENBQUE7UUFFRCxFQUFFLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUNoQyxDQUFDO0lBRU8seUJBQVEsR0FBaEIsVUFBaUIsSUFBc0I7UUFDOUIsSUFBQSxnQkFBSSxDQUFTO1FBRXJCLElBQ0MsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQztZQUMvQixJQUFJLENBQUMsMkJBQTJCLENBQUMsSUFBSSxDQUFDO1lBQ3RDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsRUFDL0I7WUFDRCxJQUFJLENBQUMsZ0JBQWdCLENBQ3BCLElBQUksRUFDSiw2REFBNkQsRUFDN0QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FDM0QsQ0FBQTtTQUNEO0lBQ0YsQ0FBQztJQUVPLHFDQUFvQixHQUE1QixVQUE2QixJQUFvQjtRQUNoRCxPQUFPLHVCQUFVLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0lBQ2pDLENBQUM7SUFFTyw0Q0FBMkIsR0FBbkMsVUFBb0MsSUFBYztRQUNqRCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQTtJQUNwQyxDQUFDO0lBRU8sc0NBQXFCLEdBQTdCLFVBQThCLElBQWM7UUFDM0MsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQTtRQUN2RCxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQTtJQUM1QixDQUFDO0lBRU8sNkJBQVksR0FBcEIsVUFBcUIsSUFBYztRQUNsQyxJQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUE7UUFDL0IsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUE7UUFDbkMsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUE7UUFFbEQsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUE7UUFDeEMsSUFBSSx1QkFBVSxDQUFDLFNBQVMsRUFBRSxpQkFBaUIsQ0FBQyxFQUFFO1lBQzdDLE1BQU0sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtZQUU1QyxJQUFNLGdCQUFnQixHQUFHLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFBO1lBQ3BELElBQUksdUJBQVUsQ0FBQyxnQkFBZ0IsRUFBRSx5QkFBeUIsQ0FBQyxFQUFFO2dCQUM1RCxNQUFNLEdBQUcsTUFBSSxNQUFNLE1BQUcsQ0FBQTthQUN0QjtTQUNEO1FBRUQsT0FBTyxNQUFNLENBQUE7SUFDZCxDQUFDO0lBRU8sK0JBQWMsR0FBdEIsVUFBdUIsSUFBWTtRQUNsQyxPQUFPLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFBO0lBQ3JDLENBQUM7SUFDRixhQUFDO0FBQUQsQ0FBQyxBQTlERCxDQUFxQixJQUFJLENBQUMsY0FBYyxHQThEdkMifQ==